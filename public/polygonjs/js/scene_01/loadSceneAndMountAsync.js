import{a as O}from"./chunk-4EIDCPOJ.js";import"./chunk-KBNISIIW.js";var g=(e=>(e.EXPORT_MANIFEST="scene/export_manifest.json",e.CODE_PREFIX="scene/code",e.PROPERTIES="scene/code/properties.json",e.EDITOR="scene/editor.json",e.ASSETS="scene/assets.json",e.POLYGONJS="js/all.js",e.SCENE_DATA_LOADER="js/sceneDataLoader.js",e.POLY_CONFIG="js/polyConfig.js",e.JS_FILES="scene/js_files.json",e.POSTER="images/poster.png",e))(g||{});var w=class{static async importSceneData(s){s.editorMode==null&&(s.editorMode=!1);let t=s.manifest,r=s.urlPrefix||g.CODE_PREFIX,n=Object.keys(t.nodes),a=[];for(let o of n){let p=t.nodes[o],E=`${r}/root/${o}.json?t=${p}`;a.push(E)}let u=`${r}/root.json?t=${t.root}`,i=`${r}/properties.json?t=${t.properties}`,d=[u,i];if(s.editorMode){let o=Date.now();d.push(`${r}/ui.json?t=${o}`)}for(let o of a)d.push(o);let A=0,_=d.length,T=o=>{let p=O.sceneData;s.onProgress&&s.onProgress(p.start+p.mult*o)},S=d.map(async o=>{let p=await fetch(o);return A++,T(A/_),p}),M=await Promise.all(S),l=[];for(let o of M)l.push(await o.json());let m={root:l[0],properties:l[1]},P=2;s.editorMode&&(m.ui=l[2],P+=1);let c={},f=Object.keys(t.nodes);for(let o=0;o<f.length;o++){let p=f[o],E=l[o+P];c[p]=E}return this.assemble(m,f,c)}static async assemble(s,t,r){let n={root:s.root,properties:s.properties,ui:s.ui};for(let a=0;a<t.length;a++){let u=t[a],i=r[u];this.insert_child_data(n.root,u,i)}return n}static insert_child_data(s,t,r){let n=t.split("/");if(n.length==1)s.nodes||(s.nodes={}),s.nodes[t]=r;else{let a=n.shift(),u=n.join("/"),i=s.nodes[a];this.insert_child_data(i,u,r)}}};var v="1645147399164",B="1645147399164",I={positionalAudio1:"1645147399164","positionalAudio1/COP":"1645147399164","positionalAudio1/eventsNetwork1":"1645147399164",geo1:"1645147399164","geo1/COP":"1645147399164","geo1/MAT":"1645147399164",crowd:"1645147399164","crowd/MAT":"1645147399164","crowd/MAT/meshLambertBuilder_INSTANCES":"1645147399164","crowd/MAT/meshStandardBuilder1":"1645147399164","crowd/MAT/meshPhongBuilder_ground":"1645147399164",planeWithTexture:"1645147399164","planeWithTexture/COP":"1645147399164","planeWithTexture/MAT":"1645147399164",waveform:"1645147399164","waveform/MAT":"1645147399164","waveform/MAT/lineBasicBuilder_FFT_asOctaves_SPEED":"1645147399164","waveform/MAT/lineBasicBuilder_FFT_asOctaves_VALUE":"1645147399164","waveform/MAT/lineBasicBuilder_FFT_raw_VALUE":"1645147399164",particles:"1645147399164","particles/particlesSystemGpu1":"1645147399164","particles/particlesSystemGpu1/subnet_FORCE_FROM_MUSIC":"1645147399164","particles/particlesSystemGpu1/subnet_CURSOR_FORCE":"1645147399164","particles/particlesSystemGpu1/subnet_RANDOMISE_MASS":"1645147399164","particles/MAT":"1645147399164","particles/MAT/pointsParticles":"1645147399164","particles/MAT/meshLambertBuilder_INSTANCES":"1645147399164","particles/MAT/meshBasicBuilder_PARTICLES":"1645147399164","particles/MAT/meshBasicBuilder_PARTICLES/ifThen1":"1645147399164","particles/eventsNetwork1":"1645147399164",blackSphere:"1645147399164","blackSphere/materialsNetwork1":"1645147399164",raycastTarget:"1645147399164",perspectiveCamera_DEBUG:"1645147399164","perspectiveCamera_DEBUG/events1":"1645147399164",perspectiveCamera_MAIN:"1645147399164","perspectiveCamera_MAIN/eventsNetwork1":"1645147399164","perspectiveCamera_MAIN/animationsNetwork1":"1645147399164",env:"1645147399164","env/MAT":"1645147399164","env/MAT/meshBasicBuilder1":"1645147399164","env/COP":"1645147399164",eventsNetwork_light_shadow:"1645147399164"},j={properties:v,root:B,nodes:I};var R=async e=>await w.importSceneData({urlPrefix:"./polygonjs/scenes/scene_01",manifest:j,onProgress:e.onProgress});var $=async function(e){let{onProgress:s,domElement:t,configureSceneData:r,autoPlay:n}=e,a=e.runRegister!=null?e.runRegister:!0,i=(e.loadModules!=null?e.loadModules:!0)?["EXRLoader","OBJLoader"]:[],d=i.map(c=>import("./modules/"+c+(e.moduleImportSuffix||""))),A=[import("./loadSceneFromSceneData-BXBNSU2K.js"),R({onProgress:s}),...d],_=await Promise.all(A),{Poly:T,loadSceneFromSceneData_scene_01:S}=_[0],M=_[1];r&&r(M);let l=[];for(let c=2;c<_.length;c++)l.push(_[c]);let m=0;for(let c of i){let f=c+"Module";T.registerModule(l[m][f]),m++}return await S({onProgress:s,sceneData:M,domElement:t,runRegister:a,autoPlay:n})};export{$ as loadSceneAndMountAsync_scene_01};
